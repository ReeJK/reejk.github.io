<!DOCTYPE html>
<html>
<head>
	<title>Decode location SMS</title>
	<meta name="viewport" content="width=device-width"></meta>
	<style>
		.line {
			margin: 10px;
		}
		input {
			display: block;
			width: 100%;
			height: 28pt;
			padding: 3pt 1pt;
		}
		.button {
			font-size: 18pt;
		}
		
		.lutton {
			display: block;
			width: 100%;
			padding: 3pt 1pt;
			font-size: 18pt;
			text-align: center;
			vertical-align: middle;
			border: 1px solid gray;
			background-color: whitesmoke;
			text-decoration: none;
		}
	</style>
	<script language="javascript">
		var apiUrl = "https://www.googleapis.com/geolocation/v1/geolocate?key=AIzaSyBcnkzjpNU19wXTprDzpHCsDmBPk_RJeho";
		
		function decode() {
			var rawData = document.getElementById('data').value;
			var hashIdx = rawData.indexOf('#');
			if(hashIdx != -1)
				rawData = rawData.substring(hashIdx + 1);
			
			console.log(rawData);
			var data = decodeData(rawData);
			console.log(data);
			var req = dataToGoogleLocationRequest(data);			
			request(req);
		}
		
		function decodeData(data) {
			var len = data.length;
			var ret = {};
			if(len == 0)
				return ret;
			
			var cells = [];
			var wifis = [];
			
			var cidSize = 2;
			switch(data.charAt(0)) {
				case 'G': ret.radioType = 'gsm'; break;
				case 'C': ret.radioType = 'cdma'; break;
				case 'W': ret.radioType = 'wcdma'; cidSize = 4; break;
				case 'L': ret.radioType = 'lte'; cidSize = 4; break;
				case '-': cidSize = 0; break;
			}

			var idx = 1;
			
			function readStr(size) {
				var r = data.substring(idx, idx + size);
				idx += size;
				return r;
			}
			
			function readInt(bytes) {
				var hex = readStr(bytes * 2);
				return parseInt(hex, 16);
			}
			
			function readDBM() {
				var dbm = readInt(1);
				return -dbm + 40;
			}
			
			for(; idx < len;) {
				if(data.charAt(idx) == 'W')
					break;
				
				var cell = {};
				cell.cellId = readInt(cidSize);
				cell.locationAreaCode = readInt(2);
				cell.mobileCountryCode = readInt(2);
				cell.mobileNetworkCode = readInt(2);
				cell.signalStrength = readDBM();
				cells.push(cell);
			}
			
			if(cells.length > 0)
				ret.cellTowers = cells;
			
			if(data.charAt(idx) == 'W') {
				function bssidToMac(b) {
					return b.charAt(0) + b.charAt(1) + ':'
						 + b.charAt(2) + b.charAt(3) + ':'
						 + b.charAt(4) + b.charAt(5) + ':'
						 + b.charAt(6) + b.charAt(7) + ':'
						 + b.charAt(8) + b.charAt(9) + ':'
						 + b.charAt(10) + b.charAt(11);
				}
		
				for(idx += 1; idx < len;) {
					var ap = {};
					var bssid = readStr(12);
					ap.macAddress = bssidToMac(bssid);
					ap.signalStrength = readDBM();
					wifis.push(ap);
				}
				
				ret.wifiAccessPoints = wifis;
			}
			
			return ret;
		}
			
		function dataToGoogleLocationRequest(data) {
			data.considerIp = false;
			return data;
		}
		
		function setResult(result) {
			document.getElementById('result').innerHTML = result;
		}
		
		function request(message) {
			var client = new XMLHttpRequest();
			client.onload = function() {
				console.log(this.status);
				var r = JSON.parse(this.responseText);
				console.log(r);
				if(r.error) {
					setResult(r.error.message);
				} else {
					var lat = r.location.lat;
					var lng = r.location.lng;
					var acc = r.accuracy;
					setResult('<a href="http://maps.google.com/?q=' + lat + ',' + lng + '" class="lutton">' + getLocalized('open_gmaps') 
						+ '</a><center>' + getLocalized('accuracy') + ' ' + acc + ' ' + getLocalized('meters')) + '</center><br>';
				}
			};
			client.onerror = function() {
				console.log(this);
			};
			
			client.open("POST", apiUrl);
			client.setRequestHeader("Content-Type", "application/json");
			client.send(JSON.stringify(message));
		}
		
		function initialize() {
			localize();
		
			if(document.location.hash != "") {
				document.getElementById('data').value = document.location.hash.substring(1);
				decode();
			}
		}
		
		var localization = {
			'en': {
				'decode': 'Decode!',
				'open_gmaps': 'Open Google maps',
				'accuracy': 'Accuracy',
				'meters': 'meters'
			},
			'ru': {
				'decode': 'Получить!',
				'open_gmaps': 'Открыть Google карты',
				'accuracy': 'Точность',
				'meters': 'метров'
			}
		};
		
		function localize() {
			document.getElementById('decode').value = getLocalized('decode');
		}
		
		function getLocalized(key) {
			var lang = navigator.language || navigator.userLanguage;
			if (!(lang in localization)) {
				var langMinusIndex = lang.indexOf('-');
				if (langMinusIndex != -1) {
					lang = lang.substring(0, langMinusIndex);
					if (!(lang in localization))
						lang = 'en';					
				}
			}
			return localization[lang][key];
		}
	</script>
</head>
<body onload='initialize();'>
	<div id='result' class='line'></div>
	<div class='line'><input type='text' id='data'></div>
	<div class='line'><input type='button' id='decode' value='Decode!' class='button' onClick='decode();'></div>
	<img src='http://maps.gstatic.com/mapfiles/api-3/images/powered-by-google-on-white2.png' align='rigth' class='line'>
</body>
</html>